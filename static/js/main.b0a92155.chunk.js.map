{"version":3,"sources":["components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","this","props","good","neutral","bad","total","positivePercentage","Math","round","Component","defaultProps","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","className","styles","button","onClick","name","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","event","currentTarget","setState","prevState","Object","keys","React","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kOAGMA,E,4JAeJ,WACI,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACG,gCACD,4CACA,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBE,KAAKC,MAAMF,GAAnC,iB,GAzBeG,aAAnBV,EACGW,aAAe,CACpBR,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAyBTP,QC/BTY,E,4JAMJ,WACE,MAA4BX,KAAKC,MAAzBW,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEf,OACE,oCACE,6BAAKD,IACJC,S,GAZaJ,aAAhBE,EACGD,aAAe,CAAEE,MAAO,WAiBlBD,Q,gBCOAG,E,4JApBZ,WACI,MAAqCd,KAAKC,MAAlCc,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACI,8BACKD,EAAQE,KAAI,SAAAC,GACT,OACI,wBAAQC,UAAWC,IAAOC,OAEtBC,QAASN,EACTO,KAAML,EAHV,SAKKA,GAJIA,Y,GAZFT,aCAxBe,E,4JAOF,WACI,IAAQC,EAAYzB,KAAKC,MAAjBwB,QAEX,OACI,oCAAM,4BAAIA,W,GAXQhB,aAArBe,EAEGd,aAAe,CAAEe,QAAS,WAepBD,QC+BAE,E,4MA5CfC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGLwB,mBAAqB,WAEnB,OADc,EAAKD,MAAMzB,KAAO,EAAKyB,MAAMvB,IAAM,EAAKuB,MAAMxB,S,EAG9D0B,gCAAkC,WAChC,IAAMxB,EAAQ,EAAKuB,qBAEnB,OADiBvB,EAAQ,EAAK,EAAKsB,MAAMzB,KAAOG,EAAS,IAAM,G,EAGnEW,gBAAkB,SAAAc,GACd,IAAQP,EAASO,EAAMC,cAAfR,KACR,EAAKS,UAAS,SAAAC,GACZ,OAAO,eAAGV,EAAOU,EAAUV,GAAQ,O,4CAKzC,WACE,IAAMK,EAAqB5B,KAAK4B,qBAC1BC,EAAkC7B,KAAK6B,kCACvCd,EAAUmB,OAAOC,KAAKnC,KAAK2B,OAE/B,OAEE,eAAC,EAAD,CAASf,MAAO,wBAAhB,UACE,cAAC,EAAD,CACEG,QAASA,EACTC,gBAAiBhB,KAAKgB,kBAEvBY,EAAqB,EACpB,cAAC,EAAD,CAAY1B,KAAMF,KAAK2B,MAAMzB,KAAMC,QAASH,KAAK2B,MAAMxB,QAASC,IAAKJ,KAAK2B,MAAMvB,IAAKC,MAAOuB,EAAoBtB,mBAAoBuB,IACpI,cAAC,EAAD,CAAcJ,QAAS,6B,GAvCfW,IAAM3B,W,MCAxB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.b0a92155.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Statistics extends Component {\r\n  static defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    total: 0,\r\n    positivePercentage: 0,\r\n  };\r\n  static propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n  };\r\n  render() {\r\n      const { good, neutral, bad, total, positivePercentage } = this.props;\r\n      return (\r\n         <div>\r\n        <h1>Statistics</h1>\r\n        <ul>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li>Positive feedback: {Math.round(positivePercentage)}%</li>\r\n        </ul>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default Statistics;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Section extends Component {\r\n  static defaultProps = { title: '(empty)' };\r\n  static propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.arrayOf(PropTypes.element),\r\n  };\r\n  render() {\r\n    const { title, children } = this.props;\r\n\r\n    return (\r\n      <section>\r\n        <h1>{title}</h1>\r\n        {children}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\nclass FeedbackOptions extends Component {\r\n  static propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n    };\r\n   render() {\r\n       const { options, onLeaveFeedback } = this.props;\r\n       return (\r\n           <div>\r\n               {options.map(option => {\r\n                   return (\r\n                       <button className={styles.button}\r\n                           key={option}\r\n                           onClick={onLeaveFeedback}\r\n                           name={option}\r\n                       >\r\n                           {option}\r\n                       </button>\r\n                   );\r\n               })}\r\n           </div>\r\n  \r\n    );\r\n  }\r\n}\r\nexport default FeedbackOptions;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Notification extends Component {\r\n\r\n  static defaultProps = { message: '(empty)' };\r\n  static propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    };\r\n    \r\n    render() {\r\n        const { message } = this.props;\r\n        \r\n     return (\r\n         <div> <p>{message}</p></div>\r\n         \r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\nimport Statistics from './components/Statistics';\r\nimport Section from './components/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions';\r\nimport Notification from './components/Notification';\r\nclass App extends React.Component {\r\n\r\nstate = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n  };\r\n \r\n  countTotalFeedback = () =>{\r\n    const total = this.state.good + this.state.bad + this.state.neutral;\r\n    return total;\r\n  }\r\n  countPositiveFeedbackPercentage = () => {\r\n    const total = this.countTotalFeedback();\r\n    const positive = total > 0 ? (this.state.good / total) * 100 : 0;\r\n    return positive;\r\n  }\r\nonLeaveFeedback = event => {\r\n    const { name } = event.currentTarget;\r\n    this.setState(prevState => {\r\n      return { [name]: prevState[name] + 1 };\r\n    });\r\n  };\r\n  \r\n   \r\nrender() {\r\n  const countTotalFeedback = this.countTotalFeedback();\r\n  const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\r\n  const options = Object.keys(this.state);\r\n  \r\n    return (\r\n      \r\n      <Section title={'Please leave feedback'}>\r\n        <FeedbackOptions\r\n          options={options}\r\n          onLeaveFeedback={this.onLeaveFeedback}\r\n        />\r\n        {countTotalFeedback > 0 ? (\r\n          <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={countTotalFeedback} positivePercentage={countPositiveFeedbackPercentage} />)\r\n        :(<Notification message={'No feedback given'} />)}\r\n      </Section>\r\n    );\r\n  \r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3vqKs\"};"],"sourceRoot":""}